[{"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/index.js":"1","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/App.js":"2","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/reportWebVitals.js":"3","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/LoginModal.js":"4","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/ActionPanel.js":"5","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/Map.js":"6","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/axiosInstance.js":"7","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/userContext.js":"8","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/MyProductsModal.js":"9","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/OwnerOrdersModal.js":"10"},{"size":548,"mtime":1610561163306,"results":"11","hashOfConfig":"12"},{"size":1638,"mtime":1610717800579,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609943077478,"results":"14","hashOfConfig":"12"},{"size":2308,"mtime":1610667344013,"results":"15","hashOfConfig":"12"},{"size":3193,"mtime":1610958813808,"results":"16","hashOfConfig":"12"},{"size":1393,"mtime":1610660097789,"results":"17","hashOfConfig":"12"},{"size":334,"mtime":1610722883084,"results":"18","hashOfConfig":"12"},{"size":87,"mtime":1610663908074,"results":"19","hashOfConfig":"12"},{"size":3537,"mtime":1610922784855,"results":"20","hashOfConfig":"12"},{"size":3136,"mtime":1610972190645,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ajn9li",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/index.js",[],["45","46"],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/App.js",["47","48"],"import \"./App.css\";\nimport { Icon } from \"leaflet\";\nimport { useEffect, useState, createContext } from 'react';\nimport { axiosInstance } from './components/axiosInstance';\nimport { ActionPanel } from './components/ActionPanel';\nimport { Map } from './components/Map';\nimport { UserContext } from './components/userContext';\n\nconst cat = new Icon({\n  iconUrl: \"./cat-svgrepo-com.svg\",\n  iconSize: [50, 50]\n});\n\n\n\n\nfunction App() {\n\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n    role: undefined\n  });\n\n\n\n  useEffect(() => {\n    console.log('App-EFFECT');\n\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n      if (token === null) {\n        localStorage.setItem('auth-token', '');\n        token = '';\n      }\n\n\n      const userInfoResponse = await axiosInstance.get(\"/users/info\", {\n        headers: { \"Authorization\": \"Bearer \" + token }\n      });\n\n\n      if (userInfoResponse !== 'Unauthenticated') {\n        setUserData({\n          token: token,\n          user: userInfoResponse.data.user,\n          role: userInfoResponse.data.role\n        });\n      }\n\n    }\n\n    checkLoggedIn();\n\n  }, []);\n\n  const [fuelType, setFuelType] = useState(\"1\");\n\n\n  return (\n    <>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <div>Welcome <strong>{userData.user === 'kwstas' ? 'No logged in' : userData.user}</strong>!</div>\n\n        <ActionPanel fuelType={fuelType} setFuelType={setFuelType} />\n        <Map fuelType={fuelType} ></Map>\n      </UserContext.Provider>\n      {console.log('APP-render')}\n    </>\n\n  );\n}\n\nexport default App;\n","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/reportWebVitals.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/LoginModal.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/ActionPanel.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/Map.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/axiosInstance.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/userContext.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/MyProductsModal.js",["49","50"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Button, Modal, ListGroup, FormControl } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { axiosInstance } from '../axiosInstance';\nimport { UserContext } from '../userContext';\n\nexport function MyProductsModal({ show, handleClose }) {\n\n  const { userData } = useContext(UserContext);\n  const [myGasStations, setMyGasStations] = useState(undefined);\n  const [products, setProducts] = useState([]);\n  const [selectedStation, setSelectedStation] = useState('');\n  const [newPrice, setNewPrice] = useState('');\n\n\n  useEffect(() => {\n    console.log('GasStations-EFFECT');\n\n    const getGasStations = async () => {\n\n      const stationsResponse = await axiosInstance.get(\"/stations/ownerstations\", {\n        headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('auth-token') }\n      });\n\n\n\n      if (stationsResponse !== 'Unauthenticated') {\n        setMyGasStations(stationsResponse.data);\n        setSelectedStation(stationsResponse.data[0].gasStationID);\n      } else {\n        setMyGasStations(undefined);\n        setSelectedStation('');\n      }\n    }\n\n    getGasStations();\n\n  }, [userData]);\n\n\n\n  useEffect(() => {\n    console.log('ProductsModal-EFFECT');\n\n    const getProducts = async () => {\n\n      const productsResponse = await axiosInstance.get(\"/pricedata/\" + selectedStation, {\n        headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('auth-token') }\n      });\n\n      setProducts(productsResponse.data);\n    }\n\n    getProducts();\n\n  }, [selectedStation, newPrice]);\n\n\n\n\n\n\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} >\n        <Modal.Header closeButton>\n          <Modal.Title>My Products</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          {myGasStations !== undefined ?\n            (<select onChange={(e) => {\n              setSelectedStation(e.target.value);\n            }}>\n              {myGasStations.map((station) => {\n                return <option value={station.gasStationID}>{station.fuelCompNormalName + '---' + station.gasStationOwner}</option>\n              })}\n            </select>) : null}\n\n\n\n          {products !== undefined ? (\n            <ListGroup>\n              {products.map((product) => {\n                return (\n\n                  <ProductItem\n                    key={product.productID}\n                    productID={product.productID}\n                    name={product.fuelName}\n                    price={product.fuelPrice}\n                    setPrice={setNewPrice} />\n\n                );\n              })}\n            </ListGroup>) : null}\n\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n\n    </>\n  );\n}\n\n\nfunction ProductItem({ productID, name, price, setPrice }) {\n\n  const [editable, setEditable] = useState(false);\n  const [changedValue, setChangedValue] = useState(price);\n\n  return (<ListGroup.Item >\n    Name: {name}\n    <br />\n    Price:{editable ? <input type=\"text\" value={changedValue} size=\"4\" onChange={(e) => { setChangedValue(e.target.value) }} /> : price}\n    <Button onClick={() => {\n      if (editable) {\n\n        axiosInstance.put(\"/pricedata/\" + productID,\n          { newPrice: changedValue },\n          {\n            headers: { \"Authorization\": \"Bearer \" + localStorage.getItem('auth-token') }\n          }).then(res => {\n            setPrice(changedValue);\n          })\n\n      }\n\n      setEditable(!editable)\n\n    }}>{editable ? 'Update' : 'Edit'}</Button>\n  </ListGroup.Item>);\n\n}","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/OwnerOrdersModal.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":31,"nodeType":"58","messageId":"59","endLine":3,"endColumn":44},{"ruleId":"56","severity":1,"message":"60","line":9,"column":7,"nodeType":"58","messageId":"59","endLine":9,"endColumn":10},{"ruleId":"56","severity":1,"message":"61","line":2,"column":36,"nodeType":"58","messageId":"59","endLine":2,"endColumn":47},{"ruleId":"56","severity":1,"message":"62","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":14},{"ruleId":"56","severity":1,"message":"62","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":14},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'cat' is assigned a value but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]