[{"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/index.js":"1","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/App.js":"2","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/reportWebVitals.js":"3","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/LoginModal.js":"4","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/ActionPanel.js":"5","/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/Map.js":"6"},{"size":548,"mtime":1610561163306,"results":"7","hashOfConfig":"8"},{"size":1809,"mtime":1610554474867,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609943077478,"results":"10","hashOfConfig":"8"},{"size":1444,"mtime":1610561237234,"results":"11","hashOfConfig":"8"},{"size":1052,"mtime":1610554425567,"results":"12","hashOfConfig":"8"},{"size":852,"mtime":1610554309808,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ajn9li",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/index.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/App.js",["27","28"],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/reportWebVitals.js",[],["29","30"],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/modals/LoginModal.js",[],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/ActionPanel.js",["31","32"],"/home/chris/Desktop/fuel_proj/front_end/fuel-app/src/components/Map.js",["33"],{"ruleId":"34","severity":1,"message":"35","line":8,"column":7,"nodeType":"36","messageId":"37","endLine":8,"endColumn":10},{"ruleId":"38","severity":1,"message":"39","line":23,"column":13,"nodeType":"40","endLine":57,"endColumn":4},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"34","severity":1,"message":"45","line":1,"column":18,"nodeType":"36","messageId":"37","endLine":1,"endColumn":23},{"ruleId":"34","severity":1,"message":"46","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":14,"column":27,"nodeType":"40","messageId":"49","endLine":14,"endColumn":29},"no-unused-vars","'cat' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"'Modal' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]